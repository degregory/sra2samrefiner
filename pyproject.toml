[project]
name = "sra2samrefiner"
description = ""
authors = [
  { name = "Nicholas Minor", email = "nrmino@wisc.edu" },
  { name = "William Gardner", email = "wkgardner@wisc.edu" },
]
requires-python = ">= 3.10"
version = "0.1.0"
dependencies = [
  "biopython>=1.85",
  "loguru>=0.7.3",
  "pandas>=2.2.3",
  "polars>=1.26.0",
  "pysam>=0.23.0",
  "typer>=0.15.2",
]

[build-system]
requires = ["setuptools >= 40.8.0", "cffi >=1.15.0,!=1.17.0"]
build-backend = "setuptools.build_meta:__legacy__"

[tool.setuptools]
py-modules = ["bin"]

[project.scripts]
"sra2samrefiner" = "bin.__main__:main"

[tool.uv]
compile-bytecode = true

[tool.ruff.lint]
# Core quality issues that matter in tests
select = [
  "F401",   # Unused imports - always fix
  "F841",   # Unused variables - always fix
  "ARG001", # Unused function arguments - fix unless fixture injection
  "PLR091", # Code complexity issues - fix unless test-specific
  "E711",   # None comparison with == instead of is
  "E712",   # Bool comparison with == instead of is
  "UP",     # pyupgrade - modernize syntax
  "B",      # Bugbear - likely bugs
  "SIM",    # Simplify - code simplification
]

# Test-specific ignores
ignore = [
  "PLR2004", # Magic values - acceptable in test assertions
  "PLR0913", # Too many arguments - acceptable for mock objects
  "ANN201",  # Missing return type on public functions - verbose for test methods
  "ANN204",  # Missing return type on special methods - not critical for tests
  "FBT001",  # Boolean positional args - acceptable for mocking pysam interface
  "FBT002",  # Boolean default args - acceptable for mocking pysam interface
  "E402",    # Module import not at top - needed for sys.path manipulation
  "PT011",   # pytest.raises too broad - sometimes needed for integration tests
]

# Test-specific overrides (in case we expand the lint suite for non-test python)
[tool.ruff.lint.per-file-ignores]
"tests/*" = [
  "PLR2004", # Magic values in test assertions
  "PLR0913", # Many args in mock objects
  "ANN001",  # Missing type annotations on test method arguments (fixture types)
  "ANN201",  # Test method return types
  "FBT001",  # Boolean args in mocks
  "FBT002",  # Boolean defaults in mocks
  "E402",    # Import order for path setup
  "E501",    # Line too long - test files often have long assertions
  "S101",    # Use of assert - this is literally what tests do!
  "SIM117",  # Nested with statements - needed for file template dependencies
]

[tool.basedpyright]
venvPath = "."
venv = ".venv"
typeCheckingMode = "off"

[tool.pixi.project]
channels = ["conda-forge", "bioconda", "anaconda"]
platforms = ["osx-64", "linux-64", "linux-aarch64"]

[tool.pixi.pypi-dependencies]
sra2samrefiner = { path = ".", editable = true }

[tool.pixi.dependencies]
samtools = ">=1.5,<2"
minimap2 = ">=2.22,<3"
nextflow = ">=24.10.5,<25"
seqkit = ">=2.10.0,<3"
bbmap = ">=39.19,<40"
sra-tools = ">=3.2.0,<4"
samrefiner = ">=1.4.2,<2"

[tool.pixi.target.linux-64.dependencies]
apptainer = ">=1.3.6,<2"

[tool.pixi.target.linux-aarch64.dependencies]
apptainer = ">=1.3.6,<2"

[dependency-groups]
dev = [
  "basedpyright>=1.28.4",
  "hypothesis>=6.138.15",
  "jupyter>=1.1.1",
  "marimo[sql]>=0.11.28",
  "polars>=1.26.0",
  "pyarrow>=19.0.1",
  "pytest>=8.3.5",
  "pytest-cov>=6.0.0",
  "pytest-mock>=3.14.0",
  "ruff>=0.11.2",
  "tox>=4.24.2",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
  "--strict-markers",
  "--strict-config",
  "-ra",
  "--cov=bin",
  "--cov-report=term-missing",
  "--cov-report=html:htmlcov",
]
markers = [
  "unit: Unit tests for individual functions",
  "integration: Integration tests with real data",
  "slow: Tests that take longer to run",
]
